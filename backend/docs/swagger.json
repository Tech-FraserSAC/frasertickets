{
    "swagger": "2.0",
    "info": {
        "description": "The backend REST API for FraserTickets.",
        "title": "FraserTickets Backend",
        "contact": {
            "name": "Aritro Saha",
            "url": "http://www.aritrosaha.ca",
            "email": "aritro.saha729@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:3001",
    "basePath": "/",
    "paths": {
        "/events": {
            "get": {
                "description": "Lists all events in the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "List all events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Event"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Creates an event in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Create an event",
                "parameters": [
                    {
                        "description": "Event details",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.eventControllerCreateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Delete event from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Delete event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "patch": {
                "description": "Update the details for an event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Update event details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updates to make (not all attributes below are required, and id cannot be changed)",
                        "name": "updates",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "304": {
                        "description": "Not Modified"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "description": "Get the data for one event from the DB",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get an event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Event"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/events/{id}/tickets": {
            "get": {
                "description": "Get every ticket for an event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "event"
                ],
                "summary": "Get tickets for event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Ticket"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too Many Requests"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.eventControllerCreateRequestBody": {
            "type": "object",
            "required": [
                "address",
                "description",
                "end_timestamp",
                "img_url",
                "location",
                "name",
                "start_timestamp"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_timestamp": {
                    "type": "string"
                },
                "img_url": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_timestamp": {
                    "type": "string"
                }
            }
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_timestamp": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "img_url": {
                    "type": "string"
                },
                "location": {
                    "description": "Ex. name of venue",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_timestamp": {
                    "type": "string"
                }
            }
        },
        "models.Ticket": {
            "type": "object",
            "properties": {
                "eventData": {
                    "$ref": "#/definitions/models.Event"
                },
                "eventID": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastScanTime": {
                    "type": "string"
                },
                "ownerData": {
                    "$ref": "#/definitions/models.User"
                },
                "ownerID": {
                    "description": "owner ID",
                    "type": "string"
                },
                "scanCount": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "description": "This is also the UUID in Firebase Auth",
                    "type": "string"
                },
                "pfp_url": {
                    "type": "string"
                },
                "student_number": {
                    "type": "string"
                }
            }
        }
    }
}